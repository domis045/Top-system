<?phpif (!defined('SYS_STARTED')) die('Security activated');if (isset($_POST['server_information'])) {		save_input_values($_POST);	$post_data = do_request($_POST, true, '');			if (!$post_data)		set_msg('Būtina užpildyti visus laukelius', 'error', $config['home_url'] . '/go/control#response');			if (strlen($post_data['title']) > 40)		set_msg('Serverio pavadinimas negali būti ilgesnis, nei 40 simbolių', 'error', $config['home_url'] . '/go/control#response');			if (!preg_match("/^[A-Za-z0-9.,-_* ]+$/", $post_data['title']))		set_msg('Blogai sudarytas serverio pavadinimas', 'error', $config['home_url'] . '/go/control#response');			if (!preg_match('|^http(s)?://[a-z0-9-]+(.[a-z0-9-]+)*(:[0-9]+)?(/.*)?$|i', $post_data['web_url']))		set_msg('Blogai sudarytas serverio puslapio adresas (turi prasidėti http://)', 'error', $config['home_url'] . '/go/control#response');			$query = $db->prepare("SELECT login_server_ip FROM servers WHERE user_id = '" . read_session('user_id') . "'");	$query->execute();			if ($query->rowCount() > 0) {		$server_data = $query->fetch(); 				if ($server_data['login_server_ip'] != $post_data['login_server_ip']) {			$query = $db->prepare("SELECT id FROM servers WHERE user_id != '" . read_session('user_id') . "' AND login_server_ip = '{$post_data['login_server_ip']}'");			$query->execute();							if ($query->rowCount() > 0)				set_msg('Toks serverio login IP jau naudojamas', 'error', $config['home_url'] . '/go/control#response');		}	} else {		$query = $db->prepare("SELECT id FROM servers WHERE user_id != '" . read_session('user_id') . "' AND login_server_ip = '{$post_data['login_server_ip']}'");		$query->execute();						if ($query->rowCount() > 0)			set_msg('Toks serverio login IP jau naudojamas', 'error', $config['home_url'] . '/go/control#response');	}			$query = $db->prepare("SELECT game_server_ip FROM servers WHERE user_id = '" . read_session('user_id') . "'");	$query->execute();		if ($query->rowCount() > 0) {		$server_data = $query->fetch(); 					if ($server_data['game_server_ip'] != $post_data['game_server_ip']) {			$query = $db->prepare("SELECT id FROM servers WHERE user_id != '" . read_session('user_id') . "' AND game_server_ip = '{$post_data['game_server_ip']}'");			$query->execute();							if ($query->rowCount() > 0)				set_msg('Toks serverio game IP jau naudojamas', 'error', $config['home_url'] . '/go/control#response');		}	} else {		$query = $db->prepare("SELECT id FROM servers WHERE user_id != '" . read_session('user_id') . "' AND game_server_ip = '{$post_data['game_server_ip']}'");		$query->execute();						if ($query->rowCount() > 0)			set_msg('Toks serverio game IP jau naudojamas', 'error', $config['home_url'] . '/go/control#response');	}			if (!is_numeric($post_data['login_server_port']) || $post_data['login_server_port'] == 21 || $post_data['login_server_port'] == 80)		set_msg('Blogai sudarytas login serverio PORT adresas', 'error', $config['home_url'] . '/go/control#response');			if (!is_numeric($post_data['game_server_port']) || $post_data['game_server_port'] == 21 || $post_data['game_server_port'] == 80)		set_msg('Blogai sudarytas game serverio PORT adresas', 'error', $config['home_url'] . '/go/control#response');			if (!is_numeric($post_data['xp']))		set_msg('Blogai sudaryti serverio daugikliai (rate)', 'server_information_msg', 'error medium_plus', base64_decode($_POST['back_path']));			if (strlen($post_data['description']) > 600)		set_msg('Serverio aprašymas per ilgas, max. 600 simbolių', 'error', $config['home_url'] . '/go/control#response');			remove_input_values($_POST);			$query = $db->prepare("SELECT id FROM servers WHERE user_id = '" . read_session('user_id') . "'");	$query->execute();		if ($query->rowCount() == 0) {		if (check_server_status($post_data['login_server_ip'], $post_data['login_server_port']))			$login_server_status = 1;		else 			$login_server_status = 0;						if (check_server_status($post_data['game_server_ip'], $post_data['game_server_port']))			$game_server_status = 1;		else 			$game_server_status = 0;					$query = $db->prepare("INSERT INTO servers SET 			user_id = '" . read_session('user_id') . "', 			title = '{$post_data['title']}',			web_url = '{$post_data['web_url']}',			chronicle = '{$post_data['chronicle']}',			xp = '{$post_data['xp']}',			description = '{$post_data['description']}',			game_server_status = '{$game_server_status}',			login_server_status = '{$login_server_status}',			login_server_ip = '{$post_data['login_server_ip']}',			game_server_ip = '{$post_data['game_server_ip']}',			login_server_port = '{$post_data['login_server_port']}',			game_server_port = '{$post_data['game_server_port']}',			votes = '0',			last_vote_date = '0'");					$query->execute();					set_msg('Serverio informacija išsaugota', 'success', $config['home_url'] . '/go/control#response');	} else {		$query = $db->prepare("UPDATE servers SET 			title = '{$post_data['title']}',			web_url = '{$post_data['web_url']}',			chronicle = '{$post_data['chronicle']}',			xp = '{$post_data['xp']}',			description = '{$post_data['description']}',			login_server_ip = '{$post_data['login_server_ip']}',			game_server_ip = '{$post_data['game_server_ip']}',			login_server_port = '{$post_data['login_server_port']}',			game_server_port = '{$post_data['game_server_port']}'			WHERE user_id = '" . read_session('user_id') . "'");					$query->execute();					set_msg('Serverio informacija išsaugota', 'success', $config['home_url'] . '/go/control#response');	}}?>